(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{386:function(t,e,a){"use strict";a.r(e);var r=a(3),o=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[a("strong",[t._v("BrE")]),t._v(" /'mjutet/ ; "),a("strong",[t._v("AmE")]),t._v(" /mjuː'teɪt/")]),t._v(" "),a("p",[t._v("vt. & vi. (使某物)变化, 转变, 突变, 变异")]),t._v(" "),a("h3",{attrs:{id:"栗子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#栗子"}},[t._v("#")]),t._v(" 栗子")]),t._v(" "),a("h4",{attrs:{id:"modify-mutate-change"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#modify-mutate-change"}},[t._v("#")]),t._v(" modify / mutate / change")]),t._v(" "),a("ol",[a("li",[t._v("modify: 修改某一东西，可能是没有方向的。")]),t._v(" "),a("li",[t._v("mutate: 改动的时候，把这样东西的属性都变了，类似于变异。")]),t._v(" "),a("li",[t._v("change: 一个广义的改变，基本上没有感情。")])]),t._v(" "),a("blockquote",[a("p",[t._v("Resist the temptation to modify a component’s prototype (or otherwise "),a("strong",[t._v("mutate")]),t._v(" it) inside a HOC.")])]),t._v(" "),a("p",[t._v("React的高阶组件介绍中有这么一条，不要去修改组件的原型，因为会改变其性质。")]),t._v(" "),a("blockquote",[a("p",[t._v("Avoid "),a("strong",[t._v("mutating")]),t._v(' a prop directly since the value will be overwritten whenever the parent component re-renders. Instead, use a data or computed property based on the prop\'s value. Prop being mutated: "myData"')])]),t._v(" "),a("p",[t._v("vue中组件通讯使用prop属性的时候，直接在子组件里修改这个props，会抛出这个warning。\b意思是要避免修改它，否则会被父组件的再一次渲染而覆盖。表达了开发修改这个属性，就是对这个属性进行变异层面的改动了，它不是你想要达到的效果。")]),t._v(" "),a("h3",{attrs:{id:"最后"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最后"}},[t._v("#")]),t._v(" 最后")]),t._v(" "),a("p",[t._v("这个单词听得最多的应该是在电影《X战警》里了，变种人还记得吧。当我们写技术文档的时候，也可以参考以上两条，当需要提醒用户修改某一个东西会造成变异的效果时，使用这个单词。")])])}),[],!1,null,null,null);e.default=o.exports}}]);