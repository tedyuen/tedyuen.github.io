(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{402:function(e,a,t){"use strict";t.r(a);var r=t(3),s=Object(r.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[t("strong",[e._v("BrE")]),e._v(" /'fiːtʃə/ ; "),t("strong",[e._v("AmE")]),e._v(" /'fitʃɚ/")]),e._v(" "),t("ol",[t("li",[e._v("n. 容貌；特色，特征；特写或专题节目")]),e._v(" "),t("li",[e._v("vi. 起重要作用")]),e._v(" "),t("li",[e._v("vt. 以…为特色；由…主演；特写")])]),e._v(" "),t("p",[e._v("时 态: featured, featuring, features")]),e._v(" "),t("h3",{attrs:{id:"栗子"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#栗子"}},[e._v("#")]),e._v(" 栗子")]),e._v(" "),t("h4",{attrs:{id:"_1-feature-branching-新建-特性分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-feature-branching-新建-特性分支"}},[e._v("#")]),e._v(" 1. Feature Branching (新建)特性分支")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://docs.gitlab.com/ee/university/training/topics/feature_branching.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("GitLab"),t("OutboundLink")],1),e._v("的在线文档中有关于 "),t("code",[e._v("Feature Branching")]),e._v(" 的介绍，先让我们来围观一下。(git基础知识就不再\b赘述了)")]),e._v(" "),t("h5",{attrs:{id:"feature-branching"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#feature-branching"}},[e._v("#")]),e._v(" Feature branching")]),e._v(" "),t("ul",[t("li",[e._v("Efficient parallel workflow for teams")]),e._v(" "),t("li",[e._v("Develop each feature in a branch")]),e._v(" "),t("li",[e._v("Keeps changes isolated")]),e._v(" "),t("li",[e._v("Consider a 1-to-1 link to issues")]),e._v(" "),t("li",[e._v("Push branches to the server frequently\n"),t("ul",[t("li",[e._v("Hint: This is a cheap backup for your work-in-progress code")])])])]),e._v(" "),t("h5",{attrs:{id:"feature-branching-sample-workflow"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#feature-branching-sample-workflow"}},[e._v("#")]),e._v(" Feature branching sample workflow")]),e._v(" "),t("ol",[t("li",[e._v("Create a new feature branch called ‘squash_some_bugs’")]),e._v(" "),t("li",[e._v("Edit ‘bugs.rb’ and remove all the bugs.")]),e._v(" "),t("li",[e._v("Commit")]),e._v(" "),t("li",[e._v("Push")])]),e._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" checkout -b squash_some_bugs\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Edit `bugs.rb`")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" status\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("add")]),e._v(" bugs.rb\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" commit -m "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'Fix some buggy code'")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" push origin squash_some_bugs\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br")])]),t("p",[e._v("简单来说，当你希望添加一个新的功能或特性，但又不想影响主分支的开发，可以开一个feature分支，等测试流程结束并且通过业务审核再合并到主分支。大家刚接触git的时候，是否能见到很多被命名为xxx-featrue或者feature-xxx的分支呢？没错，这就是团队内的Feature branching。具体的细节可以参考这篇"),t("a",{attrs:{href:"http://www.bubuko.com/infodetail-2913566.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中文博文"),t("OutboundLink")],1)]),e._v(" "),t("h4",{attrs:{id:"_2-feature-flags-功能发布控制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-feature-flags-功能发布控制"}},[e._v("#")]),e._v(" 2. Feature Flags 功能发布控制")]),e._v(" "),t("p",[e._v("和"),t("code",[e._v("Feature branching")]),e._v("一样，是一种持续集成的方案。他的主要手段是通过类似于配置文件来控制线上功能开启或者关闭。\n他的存在是为了解决"),t("code",[e._v("Feature branching")]),e._v("这种分支开发周期很长，造成主分支已经有大量的变动，会给合并带来隐患。但是CI/CD并没有万能的方案，两种方式都有各自的优缺点，关于优缺点，这篇"),t("a",{attrs:{href:"https://www.sohu.com/a/270420651_711529",target:"_blank",rel:"noopener noreferrer"}},[e._v("博文"),t("OutboundLink")],1),e._v("有详细的阐述。我就不复制了。")]),e._v(" "),t("p",[e._v("让我们来看一下 "),t("code",[e._v("React")]),e._v(" How to Contribute中的 "),t("code",[e._v("Feature Flags")]),e._v(" 来体会一下吧:")]),e._v(" "),t("blockquote",[t("p",[e._v("Feature Flags")])]),e._v(" "),t("blockquote",[t("p",[e._v("To keep the master branch in a releasable state, breaking changes and experimental features must be gated behind a feature flag.")])]),e._v(" "),t("blockquote",[t("p",[e._v("Feature flags are defined in packages/shared/ReactFeatureFlags.js. Some builds of React may enable different sets of feature flags; for example, the React Native build may be configured differently than React DOM. These flags are found in packages/shared/forks. Feature flags are statically typed by Flow, so you can run yarn flow to confirm that you’ve updated all the necessary files.")])]),e._v(" "),t("blockquote",[t("p",[e._v("React’s build system will strip out disabled feature branches before publishing. A continuous integration job runs on every commit to check for changes in bundle size. You can use the change in size as a signal that a feature was gated correctly.")])])])}),[],!1,null,null,null);a.default=s.exports}}]);